version: '3.8'

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
    driver: local

services:
  nginx:
    build:
      context: .
      dockerfile: ./docker-compose/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8.0.39
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    env_file:
      - ./docker-compose/mysql/mysql.env
    volumes:
      - ./docker-compose/mysql/my.cnf:/etc/mysql/my.cnf
      - dbdata:/var/lib/mysql/
    networks:
      - laravel

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: ./docker-compose/php/Dockerfile
    container_name: php
    volumes:
      - .:/var/www/html:delegated
      # Enable xdebug
      - ./docker-compose/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    restart: unless-stopped
    ports:
      - "9000:9000"
    depends_on:
      - mysql
      - redis
    environment:
      PHP_IDE_CONFIG: serverName=Docker
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      XDEBUG_CONFIG: "client_host=host.docker.internal"
      XDEBUG_TRIGGER: 'yes'
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: ./docker-compose/php/composer/Dockerfile
    container_name: composer
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    image: node:18.14.0-alpine
    container_name: npm
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: ./docker-compose/php/Dockerfile
    container_name: artisan
    volumes:
      - .:/var/www/html:delegated
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  websocket:
    build:
      context: .
      dockerfile: ./docker-compose/php/Dockerfile
    container_name: websocket
    restart: unless-stopped
    tty: true
    ports:
      - "6001:6001"
    expose:
      - "6001"
    depends_on:
      - php
    volumes:
      - .:/var/www/html:delegated
    working_dir: /var/www/html
    command: php artisan websockets:serve
    user: laravel
    networks:
      - laravel

  queue-worker:
    build:
      context: .
      dockerfile: ./docker-compose/php/Dockerfile
    container_name: queue-worker
    restart: unless-stopped
    tty: true
    depends_on:
      - php
    volumes:
      - .:/var/www/html:delegated
    working_dir: /var/www/html
    command: php artisan queue:listen
    user: laravel
    networks:
      - laravel
